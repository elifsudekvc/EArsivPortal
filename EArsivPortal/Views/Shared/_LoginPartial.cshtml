@using EArsivPortal.Constants
@using EArsivPortal.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @{
                var user = await UserManager.GetUserAsync(User);
                if (await UserManager.IsInRoleAsync(user, Roles.Admin.ToString()))
                {
                    <a class="nav-link navbarLink text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Admin">Admin Sayfasını Düzenle</a>
                }
                else if (await UserManager.IsInRoleAsync(user, Roles.Test.ToString()))
                {
                    <!-- Test kullanıcısı olduğunda bir şey yazmayacak -->
                }
                else
                {
                    <a class="nav-link navbarLink text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity?.Name</a>
                }
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link navbarLink btn btn-link text-dark">Çıkış</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link navbarLink" asp-area="Identity" asp-page="/Account/Register">Kayıt Ol</a>
        </li>
        <li class="nav-item">
            <a class="nav-link navbarLink " asp-area="Identity" asp-page="/Account/Login">Giriş Yap</a>
        </li>
    }
</ul>
